name: devzappi

services:
  redis:
    image: docker.io/bitnami/redis:7.0
    hostname: redis
    environment:
      TZ: ${TZ}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      ALLOW_EMPTY_PASSWORD: ${REDIS_ALLOW_EMPTY_PASSWORD}
    networks:
      - default
    volumes:
      - redis_data:/bitnami/redis

  api:
    image: ghcr.io/devantage/devzappi:1.2.0
    hostname: api
    environment:
      TZ: ${TZ}
      APP_ENV: ${API_APP_ENV}
      APP_PORT: ${API_APP_PORT}
      APP_LOG_LEVEL: ${API_APP_LOG_LEVEL}
      APP_AUTH_KEY: ${API_APP_AUTH_KEY}
      REDIS_REPOSITORY_HOST: ${API_REDIS_REPOSITORY_HOST}
      REDIS_REPOSITORY_PORT: ${API_REDIS_REPOSITORY_PORT}
      REDIS_REPOSITORY_PASSWORD: ${API_REDIS_REPOSITORY_PASSWORD}
      REDIS_REPOSITORY_DATABASE: ${API_REDIS_REPOSITORY_DATABASE}
      REDIS_SESSIONS_HOST: ${API_REDIS_SESSIONS_HOST}
      REDIS_SESSIONS_PORT: ${API_REDIS_SESSIONS_PORT}
      REDIS_SESSIONS_PASSWORD: ${API_REDIS_SESSIONS_PASSWORD}
      REDIS_SESSIONS_DATABASE: ${API_REDIS_SESSIONS_DATABASE}
    labels:
      traefik.enable: 'true'
      traefik.http.routers.api.entrypoints: 'websecure'
      traefik.http.routers.api.rule: ${TRAEFIK_RULE}
      traefik.http.routers.api.tls.certresolver: 'letsencrypt'
    networks:
      - default
      - traefik
    depends_on:
      - redis

volumes:
  redis_data:
    driver: local

networks:
  default:
  traefik:
    name: traefik
    external: true
